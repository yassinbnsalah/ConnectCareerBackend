pipeline {
    agent any
    stages {
        stage('Install dependencies') {
            steps {
                script {
                    sh('npm install')
                }
            }
        }
        stage('Unit Test') {
            steps {
                script {
                    sh('npm test')
                }
            }
        }
        stage('Adjust Coverage Report Style') {
            steps {
                script {
                    // Assurez-vous que le dossier et le fichier existent avant de tenter de les modifier
                    sh "if [ -f coverage/lcov-report/base.css ]; then echo 'body { font-family: Helvetica Neue, Helvetica, Arial, sans-serif; }' >> coverage/lcov-report/base.css; fi"
                }
            }
        }
         stage('SonarQube Analysis') {
    steps {
        script { 
            def scannerHome = tool 'scanner'
            sh "${scannerHome}/bin/sonar-scanner \
                -Dsonar.projectKey=twinerzBackend \
                -Dsonar.sources=. \
                -Dsonar.host.url=http://192.168.50.14:9000 \
                -Dsonar.login=3bcc2e54047dd2e2c89ca544cab2d31d6456c296 \
                -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info"
        } 
    } 
}
        stage('Build application') {
            steps {
                script {
                    sh('npm run build-dev')
                }
            }
        }
    }
    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
    }
}
