pipeline {
    agent any
    stages {
        stage('Install dependencies') {
            steps {
                script {
                    sh('npm install')
                }
            }
        }
        stage('Unit Test') {
            steps {
                script {
                    sh('npm test')
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script { 
                    def scannerHome = tool 'SonarQubeScanner'
                    sh "${scannerHome}/bin/sonar-scanner \
                        -Dsonar.projectKey=twinerzBackend \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=http://192.168.50.14:9000 \
                        -Dsonar.login=3bcc2e54047dd2e2c89ca544cab2d31d6456c296 \
                        -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info"
                }
            }
        }
        stage('Fix Coverage Report Style') {
            steps {
                script {
                    sh "if [ -f coverage/lcov-report/base.css ]; then sed -i 's/font-family: Helvetica Neue, Helvetica, Arial;/font-family: Helvetica Neue, Helvetica, Arial, sans-serif;/g' coverage/lcov-report/base.css; fi"
                }
            }
        }
        stage('Build application') {
            steps {
                script {
                    sh('npm run build-dev')
                }
            }
        }
    }
}
